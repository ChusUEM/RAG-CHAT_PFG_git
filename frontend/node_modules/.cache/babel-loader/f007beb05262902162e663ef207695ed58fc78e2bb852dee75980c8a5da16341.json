{"ast":null,"code":"var _jsxFileName = \"/Users/chus/Desktop/PFG/RAG-CHAT_PFG_git/frontend/src/components/chat/message_list.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { ChatMessage } from './message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatMessageList = _ref => {\n  _s();\n  let {\n    messages,\n    isMessageLoading,\n    onSourceClick\n  } = _ref;\n  const containerRef = useRef(null);\n  const [userScrolled, setUserScrolled] = useState(false);\n  useEffect(() => {\n    const container = containerRef.current;\n    // Scroll to bottom when new messages come in and the user hasn't scrolled up\n    if (container && !userScrolled) {\n      container.scrollTop = container.scrollHeight;\n    }\n  }, [messages, userScrolled]);\n  const handleScroll = () => {\n    const container = containerRef.current;\n    // Check if the user has scrolled up\n    if (container) {\n      const {\n        scrollTop,\n        clientHeight,\n        scrollHeight\n      } = container;\n      const isAtBottom = scrollTop + clientHeight >= scrollHeight;\n      setUserScrolled(!isAtBottom);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full overflow-y-auto max-h-96 pb-5 px-5 overflow-x-visible\",\n    ref: containerRef,\n    onScroll: handleScroll,\n    children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n      loading: messages.length - 1 === index && !message.content.length && isMessageLoading,\n      onSourceClick: onSourceClick,\n      ...message\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatMessageList, \"mswFexU+U1wLUyudlX1t987SoSM=\");\n_c = ChatMessageList;\nvar _c;\n$RefreshReg$(_c, \"ChatMessageList\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ChatMessage","jsxDEV","_jsxDEV","ChatMessageList","_ref","_s","messages","isMessageLoading","onSourceClick","containerRef","userScrolled","setUserScrolled","container","current","scrollTop","scrollHeight","handleScroll","clientHeight","isAtBottom","className","ref","onScroll","children","map","message","index","loading","length","content","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chus/Desktop/PFG/RAG-CHAT_PFG_git/frontend/src/components/chat/message_list.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { ChatMessage } from './message'\nimport { ChatMessageType } from 'types'\n\ntype ChatMessageListType = {\n  messages: ChatMessageType[]\n  isMessageLoading: boolean\n  onSourceClick: (source: string) => void\n}\nexport const ChatMessageList: React.FC<ChatMessageListType> = ({\n  messages,\n  isMessageLoading,\n  onSourceClick,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null)\n  const [userScrolled, setUserScrolled] = useState(false)\n\n  useEffect(() => {\n    const container = containerRef.current\n    // Scroll to bottom when new messages come in and the user hasn't scrolled up\n    if (container && !userScrolled) {\n      container.scrollTop = container.scrollHeight\n    }\n  }, [messages, userScrolled])\n\n  const handleScroll = () => {\n    const container = containerRef.current\n    // Check if the user has scrolled up\n    if (container) {\n      const { scrollTop, clientHeight, scrollHeight } = container\n      const isAtBottom = scrollTop + clientHeight >= scrollHeight\n      setUserScrolled(!isAtBottom)\n    }\n  }\n\n  return (\n    <div\n      className=\"w-full overflow-y-auto max-h-96 pb-5 px-5 overflow-x-visible\"\n      ref={containerRef}\n      onScroll={handleScroll}\n    >\n      {messages.map((message, index) => (\n        <ChatMessage\n          key={message.id}\n          loading={\n            messages.length - 1 === index &&\n            !message.content.length &&\n            isMessageLoading\n          }\n          onSourceClick={onSourceClick}\n          {...message}\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQvC,OAAO,MAAMC,eAA8C,GAAGC,IAAA,IAIxD;EAAAC,EAAA;EAAA,IAJyD;IAC7DC,QAAQ;IACRC,gBAAgB;IAChBC;EACF,CAAC,GAAAJ,IAAA;EACC,MAAMK,YAAY,GAAGX,MAAM,CAAiB,IAAI,CAAC;EACjD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEvDF,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAGH,YAAY,CAACI,OAAO;IACtC;IACA,IAAID,SAAS,IAAI,CAACF,YAAY,EAAE;MAC9BE,SAAS,CAACE,SAAS,GAAGF,SAAS,CAACG,YAAY;IAC9C;EACF,CAAC,EAAE,CAACT,QAAQ,EAAEI,YAAY,CAAC,CAAC;EAE5B,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMJ,SAAS,GAAGH,YAAY,CAACI,OAAO;IACtC;IACA,IAAID,SAAS,EAAE;MACb,MAAM;QAAEE,SAAS;QAAEG,YAAY;QAAEF;MAAa,CAAC,GAAGH,SAAS;MAC3D,MAAMM,UAAU,GAAGJ,SAAS,GAAGG,YAAY,IAAIF,YAAY;MAC3DJ,eAAe,CAAC,CAACO,UAAU,CAAC;IAC9B;EACF,CAAC;EAED,oBACEhB,OAAA;IACEiB,SAAS,EAAC,8DAA8D;IACxEC,GAAG,EAAEX,YAAa;IAClBY,QAAQ,EAAEL,YAAa;IAAAM,QAAA,EAEtBhB,QAAQ,CAACiB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BvB,OAAA,CAACF,WAAW;MAEV0B,OAAO,EACLpB,QAAQ,CAACqB,MAAM,GAAG,CAAC,KAAKF,KAAK,IAC7B,CAACD,OAAO,CAACI,OAAO,CAACD,MAAM,IACvBpB,gBACD;MACDC,aAAa,EAAEA,aAAc;MAAA,GACzBgB;IAAO,GAPNA,OAAO,CAACK,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQhB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAA5B,EAAA,CA9CYF,eAA8C;AAAA+B,EAAA,GAA9C/B,eAA8C;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}